name: Wheels

on:
  workflow_dispatch:
  pull_request:
  # push:
  #   branches:
  #    - master
  release:
    types:
      - published

jobs:
  build_sdist:
    name: Build SDist
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: true
    
    - name: Install dependencies
      if: matrix.config.name != 'Tarball'
      run:  |
        sudo bash -c "$(wget -O - https://apt.llvm.org/llvm.sh)"
        sudo apt update
        sudo apt install cmake libboost-dev libasound-dev libjack-jackd2-dev clang libc++-dev
      shell: bash
      
    - name: Build SDist
      run: pipx run build --sdist ./bindings/python

    - name: Check metadata
      run: pipx run twine check ./bindings/python/dist/*

    - uses: actions/upload-artifact@v4
      with:
        name: dist-sdist
        path: dist/*.tar.gz


  build_wheels:
    name: Wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest, ubuntu-latest] #, macos-14]

    steps:
    - uses: actions/checkout@v4
      with:
        submodules: true

    - name: Install boost
      uses: MarkusJx/install-boost@v2.5.0
      id: install-boost
      with:
          boost_version: 1.86.0

    - uses: pypa/cibuildwheel@v2.22
      with:
        package-dir: ./bindings/python
      env:
        CIBW_BUILD: "cp311-*"
        BOOST_ROOT: '${{ steps.install-boost.outputs.BOOST_ROOT }}'
        BOOST_ROOT_PIPELINE: '${{ steps.install-boost.outputs.BOOST_ROOT }}'
        CIBW_ENVIRONMENT_PASS_LINUX: BOOST_ROOT BOOST_ROOT_PIPELINE
        # By default, cibuildwheel will mount the root of the host filesystem as a volume at /host in the container
        CIBW_BEFORE_ALL_LINUX: 'for lib_root in /usr/include/alsa /usr/include/jack "$BOOST_ROOT"; do mkdir -p "$(dirname "$lib_root")" && ln -s "/host/$lib_root" "$lib_root"; done'
        CIBW_MANYLINUX_X86_64_IMAGE: manylinux_2_28
        CIBW_SKIP: "*-win_amd64 *-manylinux_i686" # Skip 64-bit on win and 32-bit on lnx

    - name: Verify clean directory
      run: git diff --exit-code
      shell: bash

    - name: Upload wheels
      uses: actions/upload-artifact@v4
      with:
        path: wheelhouse/*.whl
        name: dist-${{ matrix.os }}

  upload_all:
    name: Upload if release
    needs: [build_wheels, build_sdist]
    runs-on: ubuntu-latest
    # if: github.event_name == 'release' && github.event.action == 'published'

    steps:
    - uses: actions/setup-python@v5
    - uses: actions/download-artifact@v4
      with:
        path: dist
        pattern: dist-*
        merge-multiple: true

    - uses: pypa/gh-action-pypi-publish@release/v1
      with:
        user: __token__
        password: ${{ secrets.TESTPYPI_API_TOKEN }}
        repository-url: https://test.pypi.org/legacy/
