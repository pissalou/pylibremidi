name: Wheels

on:
  workflow_dispatch:
  pull_request:
  push:
    branches:
     - master
  release:
    types:
      - published

jobs:
  build_sdist:
    name: Build SDist
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: true
    
    - name: Install dependencies
      if: matrix.config.name != 'Tarball'
      run:  |
        sudo bash -c "$(wget -O - https://apt.llvm.org/llvm.sh)"
        sudo apt update
        sudo apt install cmake libboost-dev libasound-dev libjack-jackd2-dev clang libc++-dev
      shell: bash
      
    - name: Build SDist
      run: pipx run build --sdist ./bindings/python

    - name: Check metadata
      run: pipx run twine check dist/*

    - uses: actions/upload-artifact@v4
      with:
        name: dist-sdist
        path: dist/*.tar.gz


  build_wheels:
    name: Wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-13, macos-14, windows-latest]

    steps:
    - uses: actions/checkout@v4
      with:
        submodules: true

    - name: Install dependencies
      if: matrix.config.name != 'Tarball'
      run:  |
        if [ "$RUNNER_OS" == "Linux" ]; then
          sudo bash -c "$(wget -O - https://apt.llvm.org/llvm.sh)"
          # sudo apt update # we will install these later in an isolated container managed by cibuildwheel
          # sudo apt install cmake libboost-dev libasound-dev libjack-jackd2-dev clang libc++-dev
        elif [ "$RUNNER_OS" == "Windows" ]; then
          curl -L https://github.com/ossia/sdk/releases/download/sdk31/boost_1_86_0.tar.gz > boost.tar.gz
          tar -xzf boost.tar.gz -C /c/
          ln -s /c/boost_1_86_0/boost /c/boost
          rm boost.tar.gz
        else
          curl -L https://github.com/ossia/sdk/releases/download/sdk31/boost_1_86_0.tar.gz > boost.tar.gz
          tar -xzf boost.tar.gz
          # export ROOT_BOOST perhaps?
          rm boost.tar.gz
        fi
      shell: bash
      
    - uses: pypa/cibuildwheel@v2.22
      with:
        package-dir: ./bindings/python

    - name: Verify clean directory
      run: git diff --exit-code
      shell: bash

    - name: Upload wheels
      uses: actions/upload-artifact@v4
      with:
        path: wheelhouse/*.whl
        name: dist-${{ matrix.os }}

  upload_all:
    name: Upload if release
    needs: [build_wheels, build_sdist]
    runs-on: ubuntu-latest
    # if: github.event_name == 'release' && github.event.action == 'published'

    steps:
    - uses: actions/setup-python@v5
    - uses: actions/download-artifact@v4
      with:
        path: dist
        pattern: dist-*
        merge-multiple: true

    - uses: pypa/gh-action-pypi-publish@release/v1
      with:
        user: __token__
        password: ${{ secrets.TESTPYPI_API_TOKEN }}
        repository-url: https://test.pypi.org/legacy/
